{"ast":null,"code":"var _jsxFileName = \"/home/diegohr/Documentos/react/reactapp/src/components/CardPlate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport getPlates from \"../helpers/getPlates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  plate,\n  setPlate,\n  addOrderList,\n  sendOrder\n}) => {\n  _s();\n\n  const [plates, setPlates] = useState([]);\n\n  const uploadPlate = () => {\n    getPlates().then(newPlates => {\n      setPlates(newPlates);\n    });\n  };\n\n  useEffect(() => {\n    uploadPlate();\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    sendOrder();\n  };\n\n  const onChange = e => {\n    /*selectPlate es el plato seleccionado en el opcion\n      plates son todos los platos obtenidos de la BD \n      validamos si el plato selecionado tiene un ID\n      en caso no tenga un ID significa que no se selecciono nada \n      y si tiene un id obtenemos el nombre del plato por el ID seleccionado \n    */\n    const selectPlate = plates.filter(platedto => platedto.id === parseInt(plate.plate_id)); //Si tiene un ID guardamos en el estado SetPlate\n\n    if (selectPlate.length > 0) {\n      const namePlate = selectPlate[0];\n      setPlate({ ...plate,\n        [e.target.name]: e.target.value,\n        name: namePlate.name\n      });\n      return;\n    }\n\n    setPlate({ ...plate,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-form-label\",\n          children: \"Mesa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChange,\n          value: plate.table || \"\",\n          name: \"table\",\n          className: \"form-control\",\n          type: \"number\",\n          max: \"10\",\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-form-label\",\n          children: \"Comida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select form-control\",\n          onChange: onChange,\n          value: plate.platedto.plate_idDTO || \"\",\n          name: \"plate_id\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Seleccione un plato\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), plates.map(platedto => /*#__PURE__*/_jsxDEV(\"option\", {\n            onSelect: true,\n            value: platedto.id,\n            children: platedto.name\n          }, platedto.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-form-label\",\n          children: \"Cantidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"number\",\n          min: \"0\",\n          value: plate.amount || \"\",\n          name: \"amount\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"col-form-label\",\n          children: \"Observaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          type: \"number\",\n          value: plate.observation || \"\",\n          name: \"observation\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2\",\n        onClick: addOrderList,\n        type: \"button\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"7QQB8E+qFaherj1xKH/gqY9Z5a4=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/diegohr/Documentos/react/reactapp/src/components/CardPlate.js"],"names":["React","useState","useEffect","getPlates","Card","plate","setPlate","addOrderList","sendOrder","plates","setPlates","uploadPlate","then","newPlates","onSubmit","e","preventDefault","onChange","selectPlate","filter","platedto","id","parseInt","plate_id","length","namePlate","target","name","value","table","plate_idDTO","map","amount","observation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport getPlates from \"../helpers/getPlates\";\n\nconst Card = ({ plate, setPlate, addOrderList, sendOrder }) => {\n  const [plates, setPlates] = useState([]);\n\n  const uploadPlate = () => {\n    getPlates().then((newPlates) => {\n      setPlates(newPlates);\n    });\n  };\n\n  useEffect(() => {\n    uploadPlate();\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    sendOrder();\n  };\n\n  const onChange = (e) => {\n    /*selectPlate es el plato seleccionado en el opcion\n      plates son todos los platos obtenidos de la BD \n      validamos si el plato selecionado tiene un ID\n      en caso no tenga un ID significa que no se selecciono nada \n      y si tiene un id obtenemos el nombre del plato por el ID seleccionado \n    */ \n    const selectPlate = plates.filter(\n      (platedto) => platedto.id === parseInt(plate.plate_id)\n    );\n    //Si tiene un ID guardamos en el estado SetPlate\n    if (selectPlate.length > 0) {\n      const namePlate = selectPlate[0];\n      setPlate({\n        ...plate,\n        [e.target.name]: e.target.value,\n        name: namePlate.name,\n      });\n      return;\n    }\n    setPlate({ ...plate, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"card p-3\">\n      <h5>Pedido</h5>\n      <form onSubmit={onSubmit}>\n        <div className=\"mb-3\">\n          <label className=\"col-form-label\">Mesa</label>\n          <input\n            onChange={onChange}\n            value={plate.table || \"\"}\n            name=\"table\"\n            className=\"form-control\"\n            type=\"number\"\n            max=\"10\"\n            min=\"0\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"col-form-label\">Comida</label>\n          <select\n            className=\"form-select form-control\"\n            onChange={onChange}\n            value={plate.platedto.plate_idDTO || \"\"}\n            name=\"plate_id\"\n          >\n            <option value=\"0\">Seleccione un plato</option>\n            {plates.map((platedto) => (\n              <option onSelect key={platedto.id} value={platedto.id}>\n                {platedto.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"col-form-label\">Cantidad</label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            value={plate.amount || \"\"}\n            name=\"amount\"\n            onChange={onChange}\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"col-form-label\">Observación</label>\n          <textarea\n            className=\"form-control\"\n            type=\"number\"\n            value={plate.observation || \"\"}\n            name=\"observation\"\n            onChange={onChange}\n          ></textarea>\n        </div>\n        <button\n          className=\"btn btn-primary btn-block mx-2\"\n          onClick={addOrderList}\n          type=\"button\"\n        >\n          Agregar\n        </button>\n        <button className=\"btn btn-primary btn-block mx-2\">Enviar</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}