{"ast":null,"code":"var _jsxFileName = \"/home/diegohr/Documentos/react/reactapp/src/pages/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CardPlate from \"../components/CardPlate\";\nimport Table from \"../components/Table\";\nimport postOrder from \"../helpers/postOrder\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3030\", {\n  transports: [\"websocket\"]\n});\nconst initialPlate = {\n  plate_id: \"\",\n  table: \"\",\n  amount: \"\",\n  observation: \"\",\n  name: \"\"\n};\n\nconst Main = () => {\n  _s();\n\n  const [plate, setPlate] = useState(initialPlate);\n  const [plates, setPlates] = useState([]);\n\n  const validateFormAddList = () => {};\n\n  const addOrderList = () => {\n    setPlates([...plates, plate]);\n    setPlate({\n      plate_id: \"\",\n      amount: \"\",\n      observation: \"\",\n      name: \"\",\n      table: plate.table\n    });\n  };\n\n  const sendOrder = () => {\n    //Forma antigua\n\n    /*const platesDTO = [];\n    plates.forEach((plate) => {\n      const { plate_id, amount, observation } = plate;\n      platesDTO.push({ plate_id, amount, observation });\n    });*/\n    //Nueva forma utilizando map\n    const platesDTO = plates.map(newPlate => {\n      const {\n        plate_id,\n        amount,\n        observation\n      } = newPlate;\n      return {\n        plate_id,\n        amount,\n        observation\n      };\n    });\n    const orderDTO = {\n      table: plate.table,\n      plates: platesDTO\n    };\n    postOrder(orderDTO).then(newOrder => console.log(newOrder));\n    socket.emit(\"Plate:newOrder\");\n    resetState();\n  };\n\n  const resetState = () => {\n    setPlates([]);\n    setPlate(initialPlate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row justify-content-md-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-sm-4 pt-2\",\n      children: /*#__PURE__*/_jsxDEV(CardPlate, {\n        plate: plate,\n        setPlate: setPlate,\n        addOrderList: addOrderList,\n        sendOrder: sendOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-sm-4 pt-2\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        plates: plates,\n        setPlates: setPlates,\n        setPlate: setPlate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"2IgAXLCuC9/W+vdMwsycNnNG20U=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/diegohr/Documentos/react/reactapp/src/pages/Main.js"],"names":["React","useState","CardPlate","Table","postOrder","io","socket","transports","initialPlate","plate_id","table","amount","observation","name","Main","plate","setPlate","plates","setPlates","validateFormAddList","addOrderList","sendOrder","platesDTO","map","newPlate","orderDTO","then","newOrder","console","log","emit","resetState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CardPlate from \"../components/CardPlate\";\nimport Table from \"../components/Table\";\nimport postOrder from \"../helpers/postOrder\";\n\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:3030\", { transports: [\"websocket\"] });\n\nconst initialPlate = {\n  plate_id: \"\",\n  table: \"\",\n  amount: \"\",\n  observation: \"\",\n  name: \"\",\n};\n\nconst Main = () => {\n  const [plate, setPlate] = useState(initialPlate);\n  const [plates, setPlates] = useState([]);\n\n  const validateFormAddList = () => {\n\n  }\n\n  const addOrderList = () => {\n    setPlates([...plates, plate]);\n    setPlate({\n      plate_id: \"\",\n      amount: \"\",\n      observation: \"\",\n      name: \"\",\n      table: plate.table,\n    });\n  };\n\n  const sendOrder = () => {\n    //Forma antigua\n    /*const platesDTO = [];\n    plates.forEach((plate) => {\n      const { plate_id, amount, observation } = plate;\n      platesDTO.push({ plate_id, amount, observation });\n    });*/\n\n    //Nueva forma utilizando map\n    const platesDTO = plates.map((newPlate) => {\n      const { plate_id, amount, observation } = newPlate;\n      return { plate_id, amount, observation };\n    });\n    const orderDTO = {\n      table: plate.table,\n      plates: platesDTO,\n    };\n    postOrder(orderDTO).then((newOrder) => console.log(newOrder));\n    socket.emit(\"Plate:newOrder\");\n    resetState();\n  };\n\n  const resetState = () => {\n    setPlates([]);\n    setPlate(initialPlate);\n  };\n\n  return (\n    <div className=\"row justify-content-md-center\">\n      <div className=\"col-12 col-sm-4 pt-2\">\n        <CardPlate\n          plate={plate}\n          setPlate={setPlate}\n          addOrderList={addOrderList}\n          sendOrder={sendOrder}\n        />\n      </div>\n      \n      <div className=\"col-12 col-sm-4 pt-2\">\n        <Table plates={plates} setPlates={setPlates} setPlate={setPlate} />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}