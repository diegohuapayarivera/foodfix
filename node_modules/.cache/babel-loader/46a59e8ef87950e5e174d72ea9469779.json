{"ast":null,"code":"var _jsxFileName = \"/home/diegohr/Documentos/react/reactapp/src/components/ListOrderDetail.js\";\nimport React from \"react\";\nimport postOrderUpdate from \"../helpers/postOrderUpdate\";\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListOrderDetail = ({\n  commandDetail,\n  plates,\n  setPlates\n}) => {\n  const {\n    id,\n    plate_id,\n    state,\n    amount\n  } = commandDetail;\n\n  const getPlateName = () => {\n    const platesNames = plates.filter(plate => plate.id === plate_id);\n    return platesNames.map(plateName => plateName.name);\n  };\n\n  const changeOrderState = () => {\n    const orderDTO = {\n      id,\n      state: !state\n    };\n    const resulOrder = postOrderUpdate(orderDTO);\n    toast.promise(resulOrder, {\n      loading: \"Cargando\",\n      success: \"Se actualizo el pedido\",\n      error: \"Error al actualizar\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: state,\n        onChange: changeOrderState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-dark text-muted\",\n        children: [\"X\", amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), getPlateName()]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ListOrderDetail;\nexport default ListOrderDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOrderDetail\");","map":{"version":3,"sources":["/home/diegohr/Documentos/react/reactapp/src/components/ListOrderDetail.js"],"names":["React","postOrderUpdate","toast","ListOrderDetail","commandDetail","plates","setPlates","id","plate_id","state","amount","getPlateName","platesNames","filter","plate","map","plateName","name","changeOrderState","orderDTO","resulOrder","promise","loading","success","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAAQC,KAAR,QAAoB,iBAApB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAChE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAkCN,aAAxC;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAGP,MAAM,CAACQ,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACP,EAAN,KAAaC,QAAtC,CAApB;AACA,WAAOI,WAAW,CAACG,GAAZ,CAAiBC,SAAD,IAAeA,SAAS,CAACC,IAAzC,CAAP;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,QAAQ,GAAG;AAAEZ,MAAAA,EAAF;AAAME,MAAAA,KAAK,EAAE,CAACA;AAAd,KAAjB;AACA,UAAMW,UAAU,GAAGnB,eAAe,CAACkB,QAAD,CAAlC;AACAjB,IAAAA,KAAK,CAACmB,OAAN,CAAcD,UAAd,EAA0B;AACxBE,MAAAA,OAAO,EAAE,UADe;AAExBC,MAAAA,OAAO,EAAE,wBAFe;AAGxBC,MAAAA,KAAK,EAAE;AAHiB,KAA1B;AAKD,GARD;;AASA,sBACE;AAAA,2BACE;AAAa,MAAA,SAAS,EAAC,iBAAvB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEf,KAFX;AAGE,QAAA,QAAQ,EAAES;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAM,QAAA,SAAS,EAAC,6BAAhB;AAAA,wBAAgDR,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAOGC,YAAY,EAPf;AAAA,OAASJ,EAAT;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CA9BD;;KAAMJ,e;AAgCN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport postOrderUpdate from \"../helpers/postOrderUpdate\";\nimport {toast} from 'react-hot-toast'\n\nconst ListOrderDetail = ({ commandDetail, plates, setPlates }) => {\n  const { id, plate_id, state, amount } = commandDetail;\n\n  const getPlateName = () => {\n    const platesNames = plates.filter((plate) => plate.id === plate_id);\n    return platesNames.map((plateName) => plateName.name);\n  };\n\n  const changeOrderState = () => {\n    const orderDTO = { id, state: !state };\n    const resulOrder = postOrderUpdate(orderDTO)\n    toast.promise(resulOrder, {\n      loading: \"Cargando\",\n      success: \"Se actualizo el pedido\",\n      error: \"Error al actualizar\"\n    })\n  };\n  return (\n    <>\n      <li key={id} className=\"list-group-item\">\n        <input\n          type=\"checkbox\"\n          checked={state}\n          onChange={changeOrderState}\n        />\n        <span className=\"badge badge-dark text-muted\">X{amount}</span>\n        {getPlateName()}\n      </li>\n    </>\n  );\n};\n\nexport default ListOrderDetail;\n"]},"metadata":{},"sourceType":"module"}